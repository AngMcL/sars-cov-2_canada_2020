centroids.df <- as.data.frame(coordinates(can))
names(centroids.df) <- c("long", "lat")
cent.df <- data.frame(id = idList,PRNAME=prList, centroids.df)
#join the incidences into cent.df
cent.df<-left_join(cent.df,canPopInc,by="PRNAME")
#Adjust some positions of prov labels
cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]<-cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]+70000
cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]+110000
cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]+60000
cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]-20000
cent.df$long[which(cent.df$PRNAME=="New Brunswick")]<-cent.df$long[which(cent.df$PRNAME=="New Brunswick")]-40000
cent.df$lat[which(cent.df$PRNAME=="Alberta")]<-cent.df$lat[which(cent.df$PRNAME=="Alberta")]+70000
cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]-100000
cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]-50000
cent.df$lat[which(cent.df$PRNAME=="Manitoba")]<-cent.df$lat[which(cent.df$PRNAME=="Manitoba")]+50000
#custom changes for names
cent.df$PRNAME[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-"Newfoundland\nand Labrador"
cent.df$PRNAME[which(cent.df$PRNAME=="Northwest Territories")]<-"Northwest\nTerritories"
cent.df$PRNAME[which(cent.df$PRNAME=="British Columbia")]<-"British\nColumbia"
cent.df$PRNAME[which(cent.df$PRNAME=="Nova Scotia")]<-"Nova\nScotia"
cent.df$PRNAME[which(cent.df$PRNAME=="New Brunswick")]<-"New\nBrunswick"
cent.df$PRNAME[which(cent.df$PRNAME=="Prince Edward Island")]<-"PEI"
#make a lower lat for the Inc
cent.df$latlow<-cent.df$lat-200000
cent.df$longlow<-cent.df$long
cent.df$verbose<-paste(cent.df$Inc," cases\nper 100,000",sep="")
#change position of cum.incidence
cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]<-cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]-30000
cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]<-cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]-30000
cent.df$latlow[which(cent.df$PRNAME=="PEI")]<-cent.df$latlow[which(cent.df$PRNAME=="PEI")]+200000
cent.df$longlow[which(cent.df$PRNAME=="PEI")]<-cent.df$longlow[which(cent.df$PRNAME=="PEI")]+320000
cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]<-cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]-30000
cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")] <-cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")]+150000
cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]<-cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]-30000
cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]<- cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]<-cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
#boxes
#for north arrow
bb<-data.frame(long = c(can.lim.x[1],can.lim.x[2]*0.965), lat = c(can.lim.y[1],can.lim.y[2]*0.96)) #north arrow
bb2<-data.frame(long = can.lim.x, lat = c(can.lim.y[1]*0.94,can.lim.y[2])) #scalebar=
#nowplotit: Inc heatmap
p<-ggplot(data=can.fort1,aes(x=long, y=lat, group=group))+
geom_polygon(data=can.fort1,fill="grey65",colour="grey35",lwd=0.1)+
geom_polygon(data=us.fort1,fill="grey85",colour="grey35",lwd=0.1)+
geom_polygon(data=can.fort1, aes(fill=PRENAME,group = group),colour="grey35", lwd=0.1) +
# GlobFillScale+
geom_text(data=cent.df,aes(x=long, y=lat,
label=PRNAME,group=NULL),size=2.5,fontface="bold",lineheight = .7)+
geom_label(data=cent.df,aes(label=verbose,x=longlow,y=latlow,group=NULL),size=2)+
labs(x = NULL, y=NULL,fill = NULL) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'lightcyan1'), axis.line = element_blank(),
axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
legend.position = "none") +
coord_fixed()+
coord_cartesian(xlim =c(can.lim.x),ylim=c(can.lim.y))+
#alaska
annotate(geom="text",label="USA",y=(bbox(can)[2,2]-800000), x=(bbox(can)[1,1]+400000),size=4)+
#mainland US
annotate(geom="text",label="USA",y=(bbox(can)[2,1])+100000, x=mean(bbox(can)[1,])-800000,size=4)+
#Canadia
annotate(geom="text",label="CANADA",y=mean(bbox(can)[2,])-300000, x=mean(bbox(can)[1,])-800000,size=4)
p2<-p+north(bb,symbol=1,scale=0.08, location="topright")
p3<-p2+scalebar(data=bb2,dist = 500, dist_unit = "km",
st.size=2, st.dist=0.02,
transform = FALSE, model = "NAD83",
location="topright", inherit.aes =FALSE, border.size=0.3)
ggsave(p3,file=paste("maps_out/","Canada_CumulativeIncidence",".png",sep=""),width=xx/4,height=yy/4,units="in")
#### Map of Canada with labeled cumulative incidence ####
## Read and clean cumulative incidence
## read in and calculate cum.inc.
canPop<-read.csv("../01_subSample/Canada_cases/2016CanCensusPopProv.csv")
canInc<-read.csv("../01_subSample/Canada_cases/20210211_covid19_casesbyprov.csv")
# head(canPop)
canPop<-canPop[,c(2,4)]
colnames(canPop)<-c("province","population")
# head(canInc)
canInc<-canInc[,c(2,4,9)]
colnames(canInc)<-c("province","date","totalcases")
canInc2<-canInc[canInc$date=="2021-02-11",]
canInc2<-canInc2%>%filter(province!="Canada") %>%filter(province!="Repatriated travellers")
# head(canInc2)
#merge em
canPopInc<-left_join(canInc2,canPop,by="province")
#calculate cumulative incidence = total number of confirmed covid cases/population*100,000
canPopInc<-canPopInc %>% mutate(Inc=totalcases/population*100000)
canPopInc$Inc<-round(canPopInc$Inc) #round for clean plotty
# head(canPopInc)
#use english province name
can<-readOGR("shapefiles/Can_provinces/lpr_000b16a_e.shp")
can$PRNAME<-as.character(can$PRENAME)
can@data<-can@data[,-which(colnames(can@data)=="PRENAME")]
#change the colname
colnames(canPopInc)[which(colnames(canPopInc)=="province")]<-"PRNAME"
#check full match
all(canPopInc$PRNAME %in% can$PRNAME)
#join the provincial transmission dataframe by PRNAME
can@data<-can@data %>% left_join(canPopInc, by="PRNAME")
#change the spdf into a df using tidy
can.fort<-broom::tidy(can) #replaces fortify
#lost region names, but the ordering of "id" is the same as that stored in can@data$region
# Recover row name
can_df<-data.frame(can@data$PRNAME)
names(can_df)<-c("PRNAME")
# Create and append "id"
can_df$id<-seq(0,nrow(can_df)-1)
#Merge row names with new dataframe using "id": Finally, let us put the names back into the new dataframe:
can.fort.df <- plyr::join(can.fort, can_df, by="id")
# head(can.fort.df, n = 2) # peak at the fortified data
# head(can@data, n = 2) # final check before join
can.fort.df2 <- left_join(can.fort.df, can@data, by="PRNAME")
can.fort.df2<-can.fort.df2[,-which(colnames(can.fort.df2)=="id.y")]
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t")
## make color scheme
glob.colz<-row.names(globalPalette)
globalPalette.ch<-as.character(globalPalette$globalPalette)
names(globalPalette.ch)<-glob.colz
#add the separate maritimes provs
mar.colz<-rep("#a86030",times=3)
names(mar.colz)<-c("Nova Scotia","Newfoundland and Labrador","New Brunswick")
globalPalette.ch<-c(globalPalette.ch,mar.colz)
GlobColScale<-scale_colour_manual(name = "Location",values = globalPalette.ch,na.value="grey60")
GlobFillScale<-scale_fill_manual(name = "Location",values = globalPalette.ch,na.value="grey60")
idList <- unique(can.fort1$id)
prList<-unique(can.fort1$PRENAME)
centroids.df <- as.data.frame(coordinates(can))
names(centroids.df) <- c("long", "lat")
cent.df <- data.frame(id = idList,PRNAME=prList, centroids.df)
#join the incidences into cent.df
cent.df<-left_join(cent.df,canPopInc,by="PRNAME")
#Adjust some positions of prov labels
cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]<-cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]+70000
cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]+110000
cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]+60000
cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]-20000
cent.df$long[which(cent.df$PRNAME=="New Brunswick")]<-cent.df$long[which(cent.df$PRNAME=="New Brunswick")]-40000
cent.df$lat[which(cent.df$PRNAME=="Alberta")]<-cent.df$lat[which(cent.df$PRNAME=="Alberta")]+70000
cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]-100000
cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]-50000
cent.df$lat[which(cent.df$PRNAME=="Manitoba")]<-cent.df$lat[which(cent.df$PRNAME=="Manitoba")]+50000
#custom changes for names
cent.df$PRNAME[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-"Newfoundland\nand Labrador"
cent.df$PRNAME[which(cent.df$PRNAME=="Northwest Territories")]<-"Northwest\nTerritories"
cent.df$PRNAME[which(cent.df$PRNAME=="British Columbia")]<-"British\nColumbia"
cent.df$PRNAME[which(cent.df$PRNAME=="Nova Scotia")]<-"Nova\nScotia"
cent.df$PRNAME[which(cent.df$PRNAME=="New Brunswick")]<-"New\nBrunswick"
cent.df$PRNAME[which(cent.df$PRNAME=="Prince Edward Island")]<-"PEI"
#make a lower lat for the Inc
cent.df$latlow<-cent.df$lat-200000
cent.df$longlow<-cent.df$long
cent.df$verbose<-paste(cent.df$Inc," cases\nper 100,000",sep="")
#change position of cum.incidence
cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]<-cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]-30000
cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]<-cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]-30000
cent.df$latlow[which(cent.df$PRNAME=="PEI")]<-cent.df$latlow[which(cent.df$PRNAME=="PEI")]+200000
cent.df$longlow[which(cent.df$PRNAME=="PEI")]<-cent.df$longlow[which(cent.df$PRNAME=="PEI")]+320000
cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]<-cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]-30000
cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")] <-cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")]+150000
cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]<-cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]-30000
cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]<- cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]<-cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
#boxes
#for north arrow
bb<-data.frame(long = c(can.lim.x[1],can.lim.x[2]*0.965), lat = c(can.lim.y[1],can.lim.y[2]*0.96)) #north arrow
bb2<-data.frame(long = can.lim.x, lat = c(can.lim.y[1]*0.94,can.lim.y[2])) #scalebar=
#nowplotit: Inc heatmap
p<-ggplot(data=can.fort1,aes(x=long, y=lat, group=group))+
geom_polygon(data=can.fort1,fill="grey65",colour="grey35",lwd=0.1)+
geom_polygon(data=us.fort1,fill="grey85",colour="grey35",lwd=0.1)+
geom_polygon(data=can.fort1, aes(fill=PRENAME,group = group),colour="grey35", lwd=0.1) +
# GlobFillScale+
geom_text(data=cent.df,aes(x=long, y=lat,
label=PRNAME,group=NULL),size=2.5,fontface="bold",lineheight = .7)+
geom_label(data=cent.df,aes(label=verbose,x=longlow,y=latlow,group=NULL),size=2)+
labs(x = NULL, y=NULL,fill = NULL) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'lightcyan1'), axis.line = element_blank(),
axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
legend.position = "none") +
coord_fixed()+
coord_cartesian(xlim =c(can.lim.x),ylim=c(can.lim.y))+
#alaska
annotate(geom="text",label="USA",y=(bbox(can)[2,2]-800000), x=(bbox(can)[1,1]+400000),size=4)+
#mainland US
annotate(geom="text",label="USA",y=(bbox(can)[2,1])+100000, x=mean(bbox(can)[1,])-800000,size=4)+
#Canadia
annotate(geom="text",label="CANADA",y=mean(bbox(can)[2,])-300000, x=mean(bbox(can)[1,])-800000,size=4)
p2<-p+north(bb,symbol=1,scale=0.08, location="topright")
p3<-p2+scalebar(data=bb2,dist = 500, dist_unit = "km",
st.size=2, st.dist=0.02,
transform = FALSE, model = "NAD83",
location="topright", inherit.aes =FALSE, border.size=0.3)
ggsave(p3,file=paste("maps_out/","Canada_CumulativeIncidence",".png",sep=""),width=xx/4,height=yy/4,units="in")
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t")
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t",row.names = F)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t",row.names = T)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t",row.names = F)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv")
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t",row.names = F, col.names = F)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t",row.names = F, col.names = T)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t")
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t", row.names = T)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t")
## make color scheme
glob.colz<-row.names(globalPalette)
glob.colz
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t",row.names = colz)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t")
head(globalPalette)
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t")
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t",row.names=T)
globalPalette
## make color scheme
glob.colz<-row.names(globalPalette)
globalPalette.ch<-as.character(globalPalette$globalPalette)
names(globalPalette.ch)<-glob.colz
#add the separate maritimes provs
mar.colz<-rep("#a86030",times=3)
names(mar.colz)<-c("Nova Scotia","Newfoundland and Labrador","New Brunswick")
globalPalette.ch<-c(globalPalette.ch,mar.colz)
GlobColScale<-scale_colour_manual(name = "Location",values = globalPalette.ch,na.value="grey60")
GlobFillScale<-scale_fill_manual(name = "Location",values = globalPalette.ch,na.value="grey60")
idList <- unique(can.fort1$id)
prList<-unique(can.fort1$PRENAME)
centroids.df <- as.data.frame(coordinates(can))
names(centroids.df) <- c("long", "lat")
cent.df <- data.frame(id = idList,PRNAME=prList, centroids.df)
#join the incidences into cent.df
cent.df<-left_join(cent.df,canPopInc,by="PRNAME")
#Adjust some positions of prov labels
cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]<-cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]+70000
cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]+110000
cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]+60000
cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]-20000
cent.df$long[which(cent.df$PRNAME=="New Brunswick")]<-cent.df$long[which(cent.df$PRNAME=="New Brunswick")]-40000
cent.df$lat[which(cent.df$PRNAME=="Alberta")]<-cent.df$lat[which(cent.df$PRNAME=="Alberta")]+70000
cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]-100000
cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]-50000
cent.df$lat[which(cent.df$PRNAME=="Manitoba")]<-cent.df$lat[which(cent.df$PRNAME=="Manitoba")]+50000
#custom changes for names
cent.df$PRNAME[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-"Newfoundland\nand Labrador"
cent.df$PRNAME[which(cent.df$PRNAME=="Northwest Territories")]<-"Northwest\nTerritories"
cent.df$PRNAME[which(cent.df$PRNAME=="British Columbia")]<-"British\nColumbia"
cent.df$PRNAME[which(cent.df$PRNAME=="Nova Scotia")]<-"Nova\nScotia"
cent.df$PRNAME[which(cent.df$PRNAME=="New Brunswick")]<-"New\nBrunswick"
cent.df$PRNAME[which(cent.df$PRNAME=="Prince Edward Island")]<-"PEI"
#make a lower lat for the Inc
cent.df$latlow<-cent.df$lat-200000
cent.df$longlow<-cent.df$long
cent.df$verbose<-paste(cent.df$Inc," cases\nper 100,000",sep="")
#change position of cum.incidence
cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]<-cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]-30000
cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]<-cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]-30000
cent.df$latlow[which(cent.df$PRNAME=="PEI")]<-cent.df$latlow[which(cent.df$PRNAME=="PEI")]+200000
cent.df$longlow[which(cent.df$PRNAME=="PEI")]<-cent.df$longlow[which(cent.df$PRNAME=="PEI")]+320000
cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]<-cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]-30000
cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")] <-cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")]+150000
cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]<-cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]-30000
cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]<- cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]<-cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
#boxes
#for north arrow
bb<-data.frame(long = c(can.lim.x[1],can.lim.x[2]*0.965), lat = c(can.lim.y[1],can.lim.y[2]*0.96)) #north arrow
bb2<-data.frame(long = can.lim.x, lat = c(can.lim.y[1]*0.94,can.lim.y[2])) #scalebar=
#nowplotit: Inc heatmap
p<-ggplot(data=can.fort1,aes(x=long, y=lat, group=group))+
geom_polygon(data=can.fort1,fill="grey65",colour="grey35",lwd=0.1)+
geom_polygon(data=us.fort1,fill="grey85",colour="grey35",lwd=0.1)+
geom_polygon(data=can.fort1, aes(fill=PRENAME,group = group),colour="grey35", lwd=0.1) +
# GlobFillScale+
geom_text(data=cent.df,aes(x=long, y=lat,
label=PRNAME,group=NULL),size=2.5,fontface="bold",lineheight = .7)+
geom_label(data=cent.df,aes(label=verbose,x=longlow,y=latlow,group=NULL),size=2)+
labs(x = NULL, y=NULL,fill = NULL) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'lightcyan1'), axis.line = element_blank(),
axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
legend.position = "none") +
coord_fixed()+
coord_cartesian(xlim =c(can.lim.x),ylim=c(can.lim.y))+
#alaska
annotate(geom="text",label="USA",y=(bbox(can)[2,2]-800000), x=(bbox(can)[1,1]+400000),size=4)+
#mainland US
annotate(geom="text",label="USA",y=(bbox(can)[2,1])+100000, x=mean(bbox(can)[1,])-800000,size=4)+
#Canadia
annotate(geom="text",label="CANADA",y=mean(bbox(can)[2,])-300000, x=mean(bbox(can)[1,])-800000,size=4)
p2<-p+north(bb,symbol=1,scale=0.08, location="topright")
p3<-p2+scalebar(data=bb2,dist = 500, dist_unit = "km",
st.size=2, st.dist=0.02,
transform = FALSE, model = "NAD83",
location="topright", inherit.aes =FALSE, border.size=0.3)
ggsave(p3,file=paste("maps_out/","Canada_CumulativeIncidence",".png",sep=""),width=xx/4,height=yy/4,units="in")
source('~/Desktop/git_local/SARSCOV2_Canada_2020_2/05_GIS/scripts/CanadaTransmissionMap.R')
#setup libraries
library(dplyr)
library(tidyr)
library(plyr)
library(stringr)
library(ggplot2)
library(rgdal)
library(rgeos)
library(maptools)
library(ggsn)
library(broom)
library(RColorBrewer)
#### Set up transmission input ####
#### Inputs and outputs here ####
args<-commandArgs(trailingOnly=TRUE)
transmission.in<-args[1]
# manual setup
transmission.in<-"DF/BOOTS_Provinces_monthly_transmission.csv"
#### Read in shapefiles ####
can<-readOGR("shapefiles/Can_provinces/lpr_000b16a_e.shp")
can.fort<-fortify(can)
can$id <- row.names(can)
can.fort1<-dplyr::left_join(can.fort, can@data, by="id")
us<-readOGR("shapefiles/USA_states/US_states_nad83.shp")
# us@proj4string
# us@bbox
us.fort<-fortify(us)
us$id <- row.names(us)
us.fort1<-dplyr::left_join(us.fort, us@data, by="id")
#### Map of Canada with labeled cumulative incidence ####
## Read and clean cumulative incidence
## read in and calculate cum.inc.
canPop<-read.csv("../01_subSample/Canada_cases/2016CanCensusPopProv.csv")
canInc<-read.csv("../01_subSample/Canada_cases/20210211_covid19_casesbyprov.csv")
# head(canPop)
canPop<-canPop[,c(2,4)]
colnames(canPop)<-c("province","population")
# head(canInc)
canInc<-canInc[,c(2,4,9)]
colnames(canInc)<-c("province","date","totalcases")
canInc2<-canInc[canInc$date=="2021-02-11",]
canInc2<-canInc2%>%filter(province!="Canada") %>%filter(province!="Repatriated travellers")
# head(canInc2)
#merge em
canPopInc<-left_join(canInc2,canPop,by="province")
#calculate cumulative incidence = total number of confirmed covid cases/population*100,000
canPopInc<-canPopInc %>% mutate(Inc=totalcases/population*100000)
canPopInc$Inc<-round(canPopInc$Inc) #round for clean plotty
# head(canPopInc)
#use english province name
can<-readOGR("shapefiles/Can_provinces/lpr_000b16a_e.shp")
can$PRNAME<-as.character(can$PRENAME)
can@data<-can@data[,-which(colnames(can@data)=="PRENAME")]
#change the colname
colnames(canPopInc)[which(colnames(canPopInc)=="province")]<-"PRNAME"
#check full match
all(canPopInc$PRNAME %in% can$PRNAME)
#join the provincial transmission dataframe by PRNAME
can@data<-can@data %>% left_join(canPopInc, by="PRNAME")
#change the spdf into a df using tidy
can.fort<-broom::tidy(can) #replaces fortify
#lost region names, but the ordering of "id" is the same as that stored in can@data$region
# Recover row name
can_df<-data.frame(can@data$PRNAME)
names(can_df)<-c("PRNAME")
# Create and append "id"
can_df$id<-seq(0,nrow(can_df)-1)
#Merge row names with new dataframe using "id": Finally, let us put the names back into the new dataframe:
can.fort.df <- plyr::join(can.fort, can_df, by="id")
# head(can.fort.df, n = 2) # peak at the fortified data
# head(can@data, n = 2) # final check before join
can.fort.df2 <- left_join(can.fort.df, can@data, by="PRNAME")
can.fort.df2<-can.fort.df2[,-which(colnames(can.fort.df2)=="id.y")]
#### Make incidence map ####
#read in global palette from reconstruction output
globalPalette<-read.table("../03_stateReconstruction/DF/globalcolors.tsv",sep="\t")
## make color scheme
glob.colz<-row.names(globalPalette)
globalPalette.ch<-as.character(globalPalette$globalPalette)
names(globalPalette.ch)<-glob.colz
#add the separate maritimes provs
mar.colz<-rep("#a86030",times=3)
names(mar.colz)<-c("Nova Scotia","Newfoundland and Labrador","New Brunswick")
globalPalette.ch<-c(globalPalette.ch,mar.colz)
GlobColScale<-scale_colour_manual(name = "Location",values = globalPalette.ch,na.value="grey60")
GlobFillScale<-scale_fill_manual(name = "Location",values = globalPalette.ch,na.value="grey60")
idList <- unique(can.fort1$id)
prList<-unique(can.fort1$PRENAME)
centroids.df <- as.data.frame(coordinates(can))
names(centroids.df) <- c("long", "lat")
cent.df <- data.frame(id = idList,PRNAME=prList, centroids.df)
#join the incidences into cent.df
cent.df<-left_join(cent.df,canPopInc,by="PRNAME")
#Adjust some positions of prov labels
cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]<-cent.df$lat[which(cent.df$PRNAME=="Prince Edward Island")]+70000
cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-cent.df$long[which(cent.df$PRNAME=="Newfoundland and Labrador")]+110000
cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$long[which(cent.df$PRNAME=="Nova Scotia")]+60000
cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]<-cent.df$lat[which(cent.df$PRNAME=="Nova Scotia")]-20000
cent.df$long[which(cent.df$PRNAME=="New Brunswick")]<-cent.df$long[which(cent.df$PRNAME=="New Brunswick")]-40000
cent.df$lat[which(cent.df$PRNAME=="Alberta")]<-cent.df$lat[which(cent.df$PRNAME=="Alberta")]+70000
cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$lat[which(cent.df$PRNAME=="Saskatchewan")]-100000
cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]<-cent.df$long[which(cent.df$PRNAME=="Saskatchewan")]-50000
cent.df$lat[which(cent.df$PRNAME=="Manitoba")]<-cent.df$lat[which(cent.df$PRNAME=="Manitoba")]+50000
#custom changes for names
cent.df$PRNAME[which(cent.df$PRNAME=="Newfoundland and Labrador")]<-"Newfoundland\nand Labrador"
cent.df$PRNAME[which(cent.df$PRNAME=="Northwest Territories")]<-"Northwest\nTerritories"
cent.df$PRNAME[which(cent.df$PRNAME=="British Columbia")]<-"British\nColumbia"
cent.df$PRNAME[which(cent.df$PRNAME=="Nova Scotia")]<-"Nova\nScotia"
cent.df$PRNAME[which(cent.df$PRNAME=="New Brunswick")]<-"New\nBrunswick"
cent.df$PRNAME[which(cent.df$PRNAME=="Prince Edward Island")]<-"PEI"
#make a lower lat for the Inc
cent.df$latlow<-cent.df$lat-200000
cent.df$longlow<-cent.df$long
cent.df$verbose<-paste(cent.df$Inc," cases\nper 100,000",sep="")
#change position of cum.incidence
cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]<-cent.df$latlow[which(cent.df$PRNAME=="British\nColumbia")]-30000
cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]<-cent.df$latlow[which(cent.df$PRNAME=="Northwest\nTerritories")]-30000
cent.df$latlow[which(cent.df$PRNAME=="PEI")]<-cent.df$latlow[which(cent.df$PRNAME=="PEI")]+200000
cent.df$longlow[which(cent.df$PRNAME=="PEI")]<-cent.df$longlow[which(cent.df$PRNAME=="PEI")]+320000
cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]<-cent.df$latlow[which(cent.df$PRNAME=="Newfoundland\nand Labrador")]-30000
cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")] <-cent.df$longlow[which(cent.df$PRNAME=="Nova\nScotia")]+150000
cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]<-cent.df$latlow[which(cent.df$PRNAME=="Nova\nScotia")]-30000
cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]<- cent.df$longlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]<-cent.df$latlow[which(cent.df$PRNAME=="New\nBrunswick")]-30000
#boxes
#for north arrow
bb<-data.frame(long = c(can.lim.x[1],can.lim.x[2]*0.965), lat = c(can.lim.y[1],can.lim.y[2]*0.96)) #north arrow
bb2<-data.frame(long = can.lim.x, lat = c(can.lim.y[1]*0.94,can.lim.y[2])) #scalebar=
#nowplotit: Inc heatmap
p<-ggplot(data=can.fort1,aes(x=long, y=lat, group=group))+
geom_polygon(data=can.fort1,fill="grey65",colour="grey35",lwd=0.1)+
geom_polygon(data=us.fort1,fill="grey85",colour="grey35",lwd=0.1)+
geom_polygon(data=can.fort1, aes(fill=PRENAME,group = group),colour="grey35", lwd=0.1) +
# GlobFillScale+
geom_text(data=cent.df,aes(x=long, y=lat,
label=PRNAME,group=NULL),size=2.5,fontface="bold",lineheight = .7)+
geom_label(data=cent.df,aes(label=verbose,x=longlow,y=latlow,group=NULL),size=2)+
labs(x = NULL, y=NULL,fill = NULL) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'lightcyan1'), axis.line = element_blank(),
axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
legend.position = "none") +
coord_fixed()+
coord_cartesian(xlim =c(can.lim.x),ylim=c(can.lim.y))+
#alaska
annotate(geom="text",label="USA",y=(bbox(can)[2,2]-800000), x=(bbox(can)[1,1]+400000),size=4)+
#mainland US
annotate(geom="text",label="USA",y=(bbox(can)[2,1])+100000, x=mean(bbox(can)[1,])-800000,size=4)+
#Canadia
annotate(geom="text",label="CANADA",y=mean(bbox(can)[2,])-300000, x=mean(bbox(can)[1,])-800000,size=4)
p2<-p+north(bb,symbol=1,scale=0.08, location="topright")
p3<-p2+scalebar(data=bb2,dist = 500, dist_unit = "km",
st.size=2, st.dist=0.02,
transform = FALSE, model = "NAD83",
location="topright", inherit.aes =FALSE, border.size=0.3)
ggsave(p3,file=paste("maps_out/","Canada_CumulativeIncidence",".png",sep=""),width=xx/4,height=yy/4,units="in")
p<-ggplot(data=can.fort1,aes(x=long, y=lat, group=group))+
geom_polygon(data=can.fort1,fill="grey65",colour="grey35",lwd=0.1)+
geom_polygon(data=us.fort1,fill="grey85",colour="grey35",lwd=0.1)+
geom_polygon(data=can.fort1, aes(fill=PRENAME,group = group),colour="grey35", lwd=0.1) +
GlobFillScale+
geom_text(data=cent.df,aes(x=long, y=lat,
label=PRNAME,group=NULL),size=2.5,fontface="bold",lineheight = .7)+
geom_label(data=cent.df,aes(label=verbose,x=longlow,y=latlow,group=NULL),size=2)+
labs(x = NULL, y=NULL,fill = NULL) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'lightcyan1'), axis.line = element_blank(),
axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text.y=element_blank(), axis.ticks.y=element_blank(),
legend.position = "none") +
coord_fixed()+
coord_cartesian(xlim =c(can.lim.x),ylim=c(can.lim.y))+
#alaska
annotate(geom="text",label="USA",y=(bbox(can)[2,2]-800000), x=(bbox(can)[1,1]+400000),size=4)+
#mainland US
annotate(geom="text",label="USA",y=(bbox(can)[2,1])+100000, x=mean(bbox(can)[1,])-800000,size=4)+
#Canadia
annotate(geom="text",label="CANADA",y=mean(bbox(can)[2,])-300000, x=mean(bbox(can)[1,])-800000,size=4)
p2<-p+north(bb,symbol=1,scale=0.08, location="topright")
p3<-p2+scalebar(data=bb2,dist = 500, dist_unit = "km",
st.size=2, st.dist=0.02,
transform = FALSE, model = "NAD83",
location="topright", inherit.aes =FALSE, border.size=0.3)
ggsave(p3,file=paste("maps_out/","Canada_CumulativeIncidence",".png",sep=""),width=xx/4,height=yy/4,units="in")
source('~/Desktop/git_local/SARSCOV2_Canada_2020_2/05_GIS/scripts/CanadaTransmissionMap.R')
