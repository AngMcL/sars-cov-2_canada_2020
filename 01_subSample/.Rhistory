getwd()
library(knitr)
library(tidyverse)
library(stringr)
library(ape)
library(coronavirus)
library(Biostrings)
library(lubridate)
setwd("~/Desktop/git_local/sarscov2_canada_2020/01_subSample/subsamp/")
align.in<-"../00_cleanData/masked/mask_clean_fake.fasta"
meta.in<-"../.00_cleanData/cleaned/clean_fake_meta.csv"
b<-5
n.samp<-150 #note this is the total (Canadian + global), default is take all Canadian
getwd()
align.in<-"../00_cleanData/masked/mask_clean_fake.fasta"
meta.in<-"../.00_cleanData/cleaned/clean_fake_meta.csv"
b<-5
n.samp<-150 #note this is the total (Canadian + global),
align.base<-unlist(str_split(last(unlist(str_split(align.in,"/"))),"_"))[[3]]
if(!dir.exists("bootsamples")){dir.create("bootsamples")}
align.out<-paste("bootsamples/subsamp_align_",align.base,sep="")
meta.out<-paste("bootsamples/subsamp_meta_",align.base,sep="")
## Read in and link the alignment and metadata
#read in the data
align<-readDNAStringSet(align.in)
l.align<-length(align)
nmz<-names(align)
align.base
last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_")))
getwd()
Rscript subsample_n.R ../00_cleanData/masked/mask_clean_fake.fasta ../00_cleanData/cleaned/clean_fake_meta.csv 10 150
# setup libraries
library(knitr)
library(tidyverse)
library(stringr)
library(coronavirus)
library(ggplot2)
library(RColorBrewer)
library(zoo)
library(ggstance)
library(cowplot)
library(lubridate)
library(MASS)
library(ggrepel)
#subsampled with inferred dates
meta.inferred.dates<-"../../03_MLstate_inc/DF/20210211_metab1_inc_DatesInferred.csv"
#full metadata  cleaned in 00_CleanData
meta.in<-"../00_cleanData/cleaned/clean_fake_meta.csv"
#subsampled metadata, single bootstrap
sub.meta.in<-"bootsamples/subsamp_meta_fake.fasta150_1.csv"
#outputs
f.out<-"Results"
if(!dir.exists(f.out)){dir.create(f.out)}
## objects that are pulled from further down the pipeline
## Geo lookup tables for grouping
#subsampled with inferred dates
# meta.inferred.dates<-"../../03_MLstate_inc/DF/20210211_metab1_inc_DatesInferred.csv"
# Apply this at the very last df before plotting
# lookup.geo<-read.csv("../../03c_MLstate_boots/DF/lookup.geo.csv",header=T)
# consider moving this summarize meta script to after the ancestral state reconstruction so we can use the inferred dates, grouped geos
## Setup themes
#publication themes
pubTheme<-theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background=element_rect("grey95"),
axis.line = element_line(colour = "black"),
legend.key.size = unit(0.5,"line"),
text=element_text(size=10,face="bold"),
legend.text=element_text(size=8))
pubThemeDate<-theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect("grey95"),
axis.line = element_line(colour = "black"),
text=element_text(size=10,face="bold"),
legend.text=element_text(size=8),
axis.text.x=element_text(angle = 45,hjust=1,size=rel(1))) #this is the only difference b/w them
#outputs
f.out<-"results"
if(!dir.exists(f.out)){dir.create(f.out)}
dir.create(f.out)
if(!dir.exists(f.out)){dir.create(f.out)}
## objects that are pulled from further down the pipeline
## Geo lookup tables for grouping
#subsampled with inferred dates
# meta.inferred.dates<-"../../03_MLstate_inc/DF/20210211_metab1_inc_DatesInferred.csv"
# Apply this at the very last df before plotting
# lookup.geo<-read.csv("../../03c_MLstate_boots/DF/lookup.geo.csv",header=T)
# consider moving this summarize meta script to after the ancestral state reconstruction so we can use the inferred dates, grouped geos
## Setup themes
#publication themes
pubTheme<-theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background=element_rect("grey95"),
axis.line = element_line(colour = "black"),
legend.key.size = unit(0.5,"line"),
text=element_text(size=10,face="bold"),
legend.text=element_text(size=8))
pubThemeDate<-theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_rect("grey95"),
axis.line = element_line(colour = "black"),
text=element_text(size=10,face="bold"),
legend.text=element_text(size=8),
axis.text.x=element_text(angle = 45,hjust=1,size=rel(1))) #this is the only difference b/w them
align.in<-"../00_cleanData/masked/mask_clean_fake.fasta"
library(stringr)
last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_")))
library(knitr)
library(tidyverse)
library(stringr)
library(ape)
library(coronavirus)
library(Biostrings)
library(lubridate)
first(unlist(str_split(last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_"))),".")))
last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_")))
unlist(str_split(last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_"))),"."))
first(unlist(str_split(last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_"))),"//.")))
unlist(str_split(last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_"))),"//."))[[1]]
unlist(str_split(last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_"))),"//."))
unlist(str_split(last(unlist(str_split(last(unlist(str_split(align.in,"/"))),"_"))),"\\."))[[1]]
